{"ast":null,"code":"import _slicedToArray from \"/Users/Dugba/Desktop/github-opensource/javascript/frontend/expense-tracker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dugba/Desktop/github-opensource/javascript/frontend/expense-tracker-app/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer'; // Initial state\n\nconst initialState = {\n  transactions: [] // Create context\n\n};\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const _useReducer = useReducer(AppReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Actions\n\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/Dugba/Desktop/github-opensource/javascript/frontend/expense-tracker-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","transactions","GlobalContext","GlobalProvider","children","state","dispatch","deleteTransaction","id","type","payload","addTransaction","transaction"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK,CAIrB;;AAJqB,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGL,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,sBACpBN,UAAU,CAACC,UAAD,EAAaC,YAAb,CADU;AAAA;AAAA,QACvCK,KADuC;AAAA,QAChCC,QADgC,oBAG9C;;;AACA,WAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID;;AAED,WAASG,cAAT,CAAwBC,WAAxB,EAAqC;AACnCN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;;AAED,SAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACrCX,MAAAA,YAAY,EAAEI,KAAK,CAACJ,YADiB;AAErCM,MAAAA,iBAFqC;AAGrCI,MAAAA;AAHqC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKLP,QALK,CAAR;AAOD,CAzBM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial state\nconst initialState = {\n  transactions: []\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return (<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}